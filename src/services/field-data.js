'use strict';

var fc = require('@turf/helpers').featureCollection;
var groupBy = require('lodash').groupBy;
var map = require('lodash').map;

/**
 * Given an array of objects representing all geometry for a given road id
 * returns those geometries grouped by field data source
 * @func groupGeometriesBySource
 * @param geoms {array} array of field data geometry objects generated by a knex query
 * @return {Object} object with grouped field data geometries
 */
exports.groupGeometriesById = function (geoms) {
  geoms = groupBy(geoms, (geom) => geom.source);
  return map(geoms, (geom) => {
    // map list of row objects to geojson features.
    return fc(geom.map((geom) => {
      return {
        properties: {
          road_id: geom.road_id,
          source: geom.source
        },
        geometry: JSON.parse(geom.geometry)
      };
    }));
  });
};

/**
 * Given a list objects with road geometries, id, and source, creates a Feature Collection from the array
 * @func makeGeomFC
 * @param {array} geoms array of field data geometry objects generated by a knex query
 * @return {featureCollection} feature collection for roads.
 */
exports.makeGeomsFC = function (geoms) {
  return fc(geoms.map(geom => {
    return {
      properties: {
        road_id: geom.road_id,
        source: geom.source
      },
      geometry: JSON.parse(geom.geometry),
    };
  }));
};

